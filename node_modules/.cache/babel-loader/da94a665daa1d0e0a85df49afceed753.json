{"ast":null,"code":"var _jsxFileName = \"/home/meshmind/reactTrackerApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = res.json();\n    setTasks([...tasks, data]); //const id = Math.floor(Math.random() * 1000) + 1\n    //const newTask = { id, ...task }\n    //setTasks([...tasks, newTask])\n  };\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this) : 'No Tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","taskFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","deleteTask","id","filter","toggleReminder","map","reminder","length"],"sources":["/home/meshmind/reactTrackerApp/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json();\n    return data\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = res.json()\n    setTasks([...tasks, data])\n    //const id = Math.floor(Math.random() * 1000) + 1\n    //const newTask = { id, ...task }\n    //setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n      { ...task, reminder: !task.reminder } : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleReminder} /> : 'No Tasks to show'}\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,YAAY;MAC3B,MAAMC,cAAc,GAAG,MAAMC,UAAU,EAAvC;MACAH,QAAQ,CAACE,cAAD,CAAR;IACD,CAHD;;IAIAD,QAAQ;EACT,CANQ,EAMN,EANM,CAAT;;EAQA,MAAME,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IACA,OAAOD,IAAP;EACD,CAJD;;EAMA,MAAME,OAAO,GAAG,MAAOC,IAAP,IAAgB;IAC9B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAA+B;MACpDK,MAAM,EAAE,MAD4C;MAEpDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF2C;MAKpDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;IAL8C,CAA/B,CAAvB;IAOA,MAAMH,IAAI,GAAGF,GAAG,CAACG,IAAJ,EAAb;IACAP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,IAAX,CAAD,CAAR,CAT8B,CAU9B;IACA;IACA;EACD,CAbD;;EAeA,MAAMS,UAAU,GAAG,MAAOC,EAAP,IAAc;IAC/B,MAAMX,KAAK,CAAE,+BAA8BW,EAAG,EAAnC,EAAqC;MAC9CN,MAAM,EAAE;IADsC,CAArC,CAAX;IAIAV,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYA,EAAnC,CAAD,CAAR;EACD,CAND;;EAQA,MAAME,cAAc,GAAIF,EAAD,IAAQ;IAC7BhB,QAAQ,CAACD,KAAK,CAACoB,GAAN,CAAWV,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYA,EAAZ,GAC3B,EAAE,GAAGP,IAAL;MAAWW,QAAQ,EAAE,CAACX,IAAI,CAACW;IAA3B,CAD2B,GACaX,IADjC,CAAD,CAAR;EAED,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAAnC;MACE,OAAO,EAAEA;IADX;MAAA;MAAA;MAAA;IAAA,QADF,EAGGA,WAAW,iBAAI,QAAC,OAAD;MAAS,KAAK,EAAEW;IAAhB;MAAA;MAAA;MAAA;IAAA,QAHlB,EAIGT,KAAK,CAACsB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;MAAO,KAAK,EAAEtB,KAAd;MAClB,QAAQ,EAAEgB,UADQ;MAElB,QAAQ,EAAEG;IAFQ;MAAA;MAAA;MAAA;IAAA,QAAnB,GAEgC,kBANnC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAzDQtB,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}