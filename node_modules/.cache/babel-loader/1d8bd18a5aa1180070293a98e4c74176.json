{"ast":null,"code":"var _jsxFileName = \"/home/meshmind/reactTrackerApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n    };\n  });\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this) : 'No Tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","res","fetch","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"sources":["/home/meshmind/reactTrackerApp/src/App.js"],"sourcesContent":["import { useState , useEffect} from \"react\"\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(()=> {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n    }\n  })\n \n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) +1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n    {...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length >0 ? <Tasks tasks = {tasks} \n      onDelete={deleteTask}\n      onToggle = {toggleReminder}/>: 'No Tasks to show'}\n    </div>\n    \n  );\n}\n\nexport default App;\n "],"mappings":";;;AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAK;IACb,MAAMS,UAAU,GAAG,YAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;IACD,CAFD;EAGD,CAJQ,CAAT;;EAMA,MAAMC,OAAO,GAAIC,IAAD,IAAU;IACxB,MAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,IAAkC,CAA7C;IACA,MAAMC,OAAO,GAAG;MAACJ,EAAD;MAAK,GAAGD;IAAR,CAAhB;IACAL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMC,UAAU,GAAIL,EAAD,IAAQ;IACzBN,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMO,cAAc,GAAIP,EAAD,IAAQ;IAC7BN,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAC7B,EAAC,GAAGD,IAAJ;MAAUU,QAAQ,EAAE,CAACV,IAAI,CAACU;IAA1B,CAD6B,GACSV,IAD7B,CAAD,CAAR;EAED,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAE,MAAMP,cAAc,CAAC,CAACD,WAAF,CAAnC;MACA,OAAO,EAAIA;IADX;MAAA;MAAA;MAAA;IAAA,QADF,EAGGA,WAAW,iBAAI,QAAC,OAAD;MAAS,KAAK,EAAEO;IAAhB;MAAA;MAAA;MAAA;IAAA,QAHlB,EAIGL,KAAK,CAACiB,MAAN,GAAc,CAAd,gBAAkB,QAAC,KAAD;MAAO,KAAK,EAAIjB,KAAhB;MACnB,QAAQ,EAAEY,UADS;MAEnB,QAAQ,EAAIE;IAFO;MAAA;MAAA;MAAA;IAAA,QAAlB,GAE8B,kBANjC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GApCQjB,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}